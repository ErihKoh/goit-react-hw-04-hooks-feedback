{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/FeedbackView/FeedbackView.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/FeedbackView/FeedbackView.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","protoType","PropTypes","node","string","FeedbackOptions","labels","onLeaveFeedback","setBtn","map","label","type","optionsBtn","onClick","Statistic","good","neutral","bad","total","positivePercentage","list","item","Notification","message","notify","FeedbackView","useState","setGood","setNeutral","setBad","appBlock","prevState","Math","round","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6786202.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"setBtn\":\"FeedbackOptions_setBtn__38iz6\",\"optionsBtn\":\"FeedbackOptions_optionsBtn__2lqy1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1uSD7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBlock\":\"FeedbackView_appBlock__HNUEr\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div className={s.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.protoType = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nfunction FeedbackOptions({ labels, onLeaveFeedback }) {\r\n  return (\r\n    <div className={s.setBtn}>\r\n      {labels.map((label) => (\r\n        <button\r\n          key={label}\r\n          type=\"button\"\r\n          className={s.optionsBtn}\r\n          onClick={() => onLeaveFeedback(label)}\r\n        >\r\n          {label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  option: PropTypes.string,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import s from \"./Statistics.module.css\";\r\n\r\nfunction Statistic({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      <li className={s.item}>\r\n        <span>good: </span>\r\n        <span>{good}</span>\r\n      </li>\r\n      <li className={s.item}>\r\n        <span>neutral: </span>\r\n        <span>{neutral}</span>\r\n      </li>\r\n      <li className={s.item}>\r\n        <span>bad: </span>\r\n        <span>{bad}</span>\r\n      </li>\r\n      <li className={s.item}>\r\n        <span>total: </span>\r\n        <span>{total}</span>\r\n      </li>\r\n      {good > 0 && (\r\n        <li className={s.item}>\r\n          <span>positivePercentage: </span>\r\n          <span>{positivePercentage}%</span>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Statistic;\r\n","import s from \"./Notification.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Notification({ message }) {\r\n  return <span className={s.notify}>{message}</span>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Section from \"../Section\";\r\nimport FeedbackOptions from \"../FeedbackOptions\";\r\nimport Statistic from \"../Statistics\";\r\nimport Notification from \"../Notification\";\r\nimport s from \"./FeedbackView.module.css\";\r\n\r\nexport default function FeedbackView() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const addFeedback = (type) => {\r\n    switch (type) {\r\n      case \"good\":\r\n        setGood((prevState) => prevState + 1);\r\n        break;\r\n      case \"neutral\":\r\n        setNeutral((prevState) => prevState + 1);\r\n        break;\r\n      case \"bad\":\r\n        setBad((prevState) => prevState + 1);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const total = function () {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = function () {\r\n    return Math.round((good * 100) / (good + neutral + bad));\r\n  };\r\n\r\n  return (\r\n    <div className={s.appBlock}>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          labels={[\"good\", \"neutral\", \"bad\"]}\r\n          onLeaveFeedback={addFeedback}\r\n        />\r\n      </Section>\r\n      {total() ? (\r\n        <Section title=\"Statistics\">\r\n          <Statistic\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total()}\r\n            positivePercentage={countPositiveFeedbackPercentage()}\r\n          />\r\n        </Section>\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackView.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import \"./App.css\";\nimport FeedbackView from \"./components/FeedbackView\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FeedbackView />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}